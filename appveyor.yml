environment:
  PYPI_PASSWD:
    secure: w16EmxgfwQdS1FLB/PCWQA==
  matrix:
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - "ci/build.cmd %PYTHON%\\python.exe -m pip install -U wheel setuptools"
  - "ci/build.cmd %PYTHON%\\python.exe -m pip install -r requirements/test.txt"

install:
  - "%WITH_COMPILER% %PYTHON%/python -V"
  - "%WITH_COMPILER% %PYTHON%/python -m pip install -r requirements-dev-win.txt"
  - cmd: nuget install redis-64 -excludeversion
  - cmd: redis-64\tools\redis-server.exe --service-install
  - cmd: redis-64\tools\redis-server.exe --service-start

build: false

test_script:
  - "ci/build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  - "ci/build.cmd %PYTHON%\\python.exe setup.py sdist bdist_wheel"

artifacts:
  - path: dist\*

deploy_script:
  - ps: >-
      if($env:appveyor_repo_tag -eq 'True') {
          Invoke-Expression "$env:PYTHON\\python.exe -m twine upload dist/* --username lsbardel --password $env:PYPI_PASSWD"
      }

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
